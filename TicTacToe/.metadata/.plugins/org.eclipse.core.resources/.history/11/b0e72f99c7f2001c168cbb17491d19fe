package com.springboot.app.player.services;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.stereotype.Service;
import org.springframework.web.server.ResponseStatusException;

import com.springboot.app.player.dtos.PlayerDto;
import com.springboot.app.player.entities.PlayerEntity;
import com.springboot.app.player.repository.PlayerRepository;
import com.springboot.app.player.utils.MapperPlayer;

@Service
public class PlayerService implements IPlayerService {
	
	@Autowired
	private PlayerRepository playerRepository;

	@Override
	public PlayerEntity create(PlayerEntity player) {
		return playerRepository.save(player);
	}
	
	@Override
	public PlayerEntity getPlayerByUsername(String username) {
		return playerRepository.findByUsername(username)
				.orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND, String.format("Player with username %s does not exist", username)));
	}

	@Override
	public Integer getIdByUsername(String username) {
		return getPlayerByUsername(username).getId();
	}

	@Override
	public PlayerDto getPlayerById(Integer id) {
		PlayerEntity playerEntity = playerRepository.findById(id)
				.orElseThrow(() -> new ResponseStatusException(HttpStatus.NOT_FOUND, String.format("Player with id %s does not exist", id)));;
			return new MapperPlayer().toDto(playerEntity);
		
	}
	
	
	
	
	
	
}
